#include <iostream>
#include <pthread.h>

#include "stream.h"
#include "bitbuf.h"
#include "pack.h"
#include "syshdr.h"
#include "peshdr.h"
#include "sequence.h"
#include "extension.h"
#include "user.h"
#include "gop.h"
#include "picdata.h"
#include "motvecs.h"
#include "block.h"
#include "macroblk.h"
#include "slice.h"
#include "picture.h"
#include "doorbell.h"
#include "thread.h"
#include "base_parser.h"
#include "buf_bitbuf.h"
#include "picdata.h"
#include "block.h"

using namespace std;

struct test_case {
    uint64_t bits;
    uint32_t cmp;
    uint32_t shft;
    uint32_t max;
    uint32_t er;
    int32_t  el;
    bool     first;
};

struct test_case B14_test_cases[] = {
    {0x10000,  2, 15, 17,  0,  1, true},
    {0x18000,  2, 15, 17,  0, -1, true},
    {0x18000,  6, 14, 17,  0,  1, false},
    {0x1C000,  6, 14, 17,  0, -1, false},
    {0xC000,   6, 13, 17,  1,   1, false},
    {0xE000,   6, 13, 17,  1,  -1, false},
    {0x8000,   8, 12, 17,  0,   2, false},
    {0x9000,   8, 12, 17,  0,  -2, false},
    {0xA000, 0xA, 12, 17,  2,   1, false},
    {0xB000, 0xA, 12, 17,  2,  -1, false},
    {0x5000, 0xA, 11, 17,  0,   3, false},
    {0x5800, 0xA, 11, 17,  0,  -3, false},
    {0x7000, 0xE, 11, 17,  3,   1, false},
    {0x7800, 0xE, 11, 17,  3,  -1, false},
    {0x6000, 0xC, 11, 17,  4,   1, false},
    {0x6800, 0xC, 11, 17,  4,  -1, false},
    {0x3000, 0xC, 10, 17,  1,   2, false},
    {0x3400, 0xC, 10, 17,  1,  -2, false},
    {0x3800, 0xE, 10, 17,  5,   1, false},
    {0x3C00, 0xE, 10, 17,  5,  -1, false},
    {0x2800, 0xA, 10, 17,  6,   1, false},
    {0x2C00, 0xA, 10, 17,  6,  -1, false},
    {0x2000,   8, 10, 17,  7,   1, false},
    {0x2400,   8, 10, 17,  7,  -1, false},
    {0x1800, 0xC,  9, 17,  0,   4, false},
    {0x1A00, 0xC,  9, 17,  0,  -4, false},
    {0x1000,   8,  9, 17,  2,   2, false},
    {0x1200,   8,  9, 17,  2,  -2, false},
    {0x1C00, 0xE,  9, 17,  8,   1, false},
    {0x1E00, 0xE,  9, 17,  8,  -1, false},
    {0x1400, 0xA,  9, 17,  9,   1, false},
    {0x1600, 0xA,  9, 17,  9,  -1, false},
    {0x4C00, 0x4C, 8, 17,  0,   5, false},
    {0x4D00, 0x4C, 8, 17,  0,  -5, false},
    {0x4200, 0x42, 8, 17,  0,   6, false},
    {0x4300, 0x42, 8, 17,  0,  -6, false},
    {0x4A00, 0x4A, 8, 17,  1,   3, false},
    {0x4B00, 0x4A, 8, 17,  1,  -3, false},
    {0x4800, 0x48, 8, 17,  3,   2, false},
    {0x4900, 0x48, 8, 17,  3,  -2, false},
    {0x4E00, 0x4E, 8, 17, 10,   1, false},
    {0x4F00, 0x4E, 8, 17, 10,  -1, false},
    {0x4600, 0x46, 8, 17, 11,   1, false},
    {0x4700, 0x46, 8, 17, 11,  -1, false},
    {0x4400, 0x44, 8, 17, 12,   1, false},
    {0x4500, 0x44, 8, 17, 12,  -1, false},
    {0x4000, 0x40, 8, 17, 13,   1, false},
    {0x4100, 0x40, 8, 17, 13,  -1, false},
    {0x500, 0x14, 6, 17,  0,   7, false},
    {0x540, 0x14, 6, 17,  0,  -7, false},
    {0x600, 0x18, 6, 17,  1,   4, false},
    {0x640, 0x18, 6, 17,  1,  -4, false},
    {0x580, 0x16, 6, 17,  2,   3, false},
    {0x5C0, 0x16, 6, 17,  2,  -3, false},
    {0x780, 0x1E, 6, 17,  4,   2, false},
    {0x7C0, 0x1E, 6, 17,  4,  -2, false},
    {0x480, 0x12, 6, 17,  5,   2, false},
    {0x4C0, 0x12, 6, 17,  5,  -2, false},
    {0x700, 0x1C, 6, 17, 14,   1, false},
    {0x740, 0x1C, 6, 17, 14,  -1, false},
    {0x680, 0x1A, 6, 17, 15,   1, false},
    {0x6C0, 0x1A, 6, 17, 15,  -1, false},
    {0x400, 0x10, 6, 17, 16,   1, false},
    {0x440, 0x10, 6, 17, 16,  -1, false},
    {0x3A0, 0x3A, 4, 17,  0,   8, false},
    {0x3B0, 0x3A, 4, 17,  0,  -8, false},
    {0x300, 0x30, 4, 17,  0,   9, false},
    {0x310, 0x30, 4, 17,  0,  -9, false},
    {0x260, 0x26, 4, 17,  0,  10, false},
    {0x270, 0x26, 4, 17,  0, -10, false},
    {0x200, 0x20, 4, 17,  0,  11, false},
    {0x210, 0x20, 4, 17,  0, -11, false},
    {0x360, 0x36, 4, 17,  1,   5, false},
    {0x370, 0x36, 4, 17,  1,  -5, false},
    {0x280, 0x28, 4, 17,  2,   4, false},
    {0x290, 0x28, 4, 17,  2,  -4, false},
    {0x380, 0x38, 4, 17,  3,   3, false},
    {0x390, 0x38, 4, 17,  3,  -3, false},
    {0x240, 0x24, 4, 17,  4,   3, false},
    {0x250, 0x24, 4, 17,  4,  -3, false},
    {0x3C0, 0x3C, 4, 17,  6,   2, false},
    {0x3D0, 0x3C, 4, 17,  6,  -2, false},
    {0x2A0, 0x2A, 4, 17,  7,   2, false},
    {0x2B0, 0x2A, 4, 17,  7,  -2, false},
    {0x220, 0x22, 4, 17,  8,   2, false},
    {0x230, 0x22, 4, 17,  8,  -2, false},
    {0x3E0, 0x3E, 4, 17, 17,   1, false},
    {0x3F0, 0x3E, 4, 17, 17,  -1, false},
    {0x340, 0x34, 4, 17, 18,   1, false},
    {0x350, 0x34, 4, 17, 18,  -1, false},
    {0x320, 0x32, 4, 17, 19,   1, false},
    {0x330, 0x32, 4, 17, 19,  -1, false},
    {0x2E0, 0x2E, 4, 17, 20,   1, false},
    {0x2F0, 0x2E, 4, 17, 20,  -1, false},
    {0x2C0, 0x2C, 4, 17, 21,   1, false},
    {0x2D0, 0x2C, 4, 17, 21,  -1, false},
    {0x1A0, 0x34, 3, 17,  0,  12, false},
    {0x1A8, 0x34, 3, 17,  0, -12, false},
    {0x190, 0x32, 3, 17,  0,  13, false},
    {0x198, 0x32, 3, 17,  0, -13, false},
    {0x180, 0x30, 3, 17,  0,  14, false},
    {0x188, 0x30, 3, 17,  0, -14, false},
    {0x170, 0x2E, 3, 17,  0,  15, false},
    {0x178, 0x2E, 3, 17,  0, -15, false},
    {0x160, 0x2C, 3, 17,  1,   6, false},
    {0x168, 0x2C, 3, 17,  1,  -6, false},
    {0x150, 0x2A, 3, 17,  1,   7, false},
    {0x158, 0x2A, 3, 17,  1,  -7, false},
    {0x140, 0x28, 3, 17,  2,   5, false},
    {0x148, 0x28, 3, 17,  2,  -5, false},
    {0x130, 0x26, 3, 17,  3,   4, false},
    {0x138, 0x26, 3, 17,  3,  -4, false},
    {0x120, 0x24, 3, 17,  5,   3, false},
    {0x128, 0x24, 3, 17,  5,  -3, false},
    {0x110, 0x22, 3, 17,  9,   2, false},
    {0x118, 0x22, 3, 17,  9,  -2, false},
    {0x100, 0x20, 3, 17, 10,   2, false},
    {0x108, 0x20, 3, 17, 10,  -2, false},
    {0x1F0, 0x3E, 3, 17, 22,   1, false},
    {0x1F8, 0x3E, 3, 17, 22,  -1, false},
    {0x1E0, 0x3C, 3, 17, 23,   1, false},
    {0x1E8, 0x3C, 3, 17, 23,  -1, false},
    {0x1D0, 0x3A, 3, 17, 24,   1, false},
    {0x1D8, 0x3A, 3, 17, 24,  -1, false},
    {0x1C0, 0x38, 3, 17, 25,   1, false},
    {0x1C8, 0x38, 3, 17, 25,  -1, false},
    {0x1B0, 0x36, 3, 17, 26,   1, false},
    {0x1B8, 0x36, 3, 17, 26,  -1, false},
    {0xF8, 0x3E, 2, 17,  0,  16, false},
    {0xFC, 0x3E, 2, 17,  0, -16, false},
    {0xF0, 0x3C, 2, 17,  0,  17, false},
    {0xF4, 0x3C, 2, 17,  0, -17, false},
    {0xE8, 0x3A, 2, 17,  0,  18, false},
    {0xEC, 0x3A, 2, 17,  0, -18, false},
    {0xE0, 0x38, 2, 17,  0,  19, false},
    {0xE4, 0x38, 2, 17,  0, -19, false},
    {0xD8, 0x36, 2, 17,  0,  20, false},
    {0xDC, 0x36, 2, 17,  0, -20, false},
    {0xD0, 0x34, 2, 17,  0,  21, false},
    {0xD4, 0x34, 2, 17,  0, -21, false},
    {0xC8, 0x32, 2, 17,  0,  22, false},
    {0xCC, 0x32, 2, 17,  0, -22, false},
    {0xC0, 0x30, 2, 17,  0,  23, false},
    {0xC4, 0x30, 2, 17,  0, -23, false},
    {0xB8, 0x2E, 2, 17,  0,  24, false},
    {0xBC, 0x2E, 2, 17,  0, -24, false},
    {0xB0, 0x2C, 2, 17,  0,  25, false},
    {0xB4, 0x2C, 2, 17,  0, -25, false},
    {0xA8, 0x2A, 2, 17,  0,  26, false},
    {0xAC, 0x2A, 2, 17,  0, -26, false},
    {0xA0, 0x28, 2, 17,  0,  27, false},
    {0xA4, 0x28, 2, 17,  0, -27, false},
    {0x98, 0x26, 2, 17,  0,  28, false},
    {0x9C, 0x26, 2, 17,  0, -28, false},
    {0x90, 0x24, 2, 17,  0,  29, false},
    {0x94, 0x24, 2, 17,  0, -29, false},
    {0x88, 0x22, 2, 17,  0,  30, false},
    {0x8C, 0x22, 2, 17,  0, -30, false},
    {0x80, 0x20, 2, 17,  0,  31, false},
    {0x84, 0x20, 2, 17,  0, -31, false},
    {0x60, 0x30, 1, 17,  0,  32, false},
    {0x62, 0x30, 1, 17,  0, -32, false},
    {0x5C, 0x2E, 1, 17,  0,  33, false},
    {0x5E, 0x2E, 1, 17,  0, -33, false},
    {0x58, 0x2C, 1, 17,  0,  34, false},
    {0x5A, 0x2C, 1, 17,  0, -34, false},
    {0x54, 0x2A, 1, 17,  0,  35, false},
    {0x56, 0x2A, 1, 17,  0, -35, false},
    {0x50, 0x28, 1, 17,  0,  36, false},
    {0x52, 0x28, 1, 17,  0, -36, false},
    {0x4C, 0x26, 1, 17,  0,  37, false},
    {0x4E, 0x26, 1, 17,  0, -37, false},
    {0x48, 0x24, 1, 17,  0,  38, false},
    {0x4A, 0x24, 1, 17,  0, -38, false},
    {0x44, 0x22, 1, 17,  0,  39, false},
    {0x46, 0x22, 1, 17,  0, -39, false},
    {0x40, 0x20, 1, 17,  0,  40, false},
    {0x42, 0x20, 1, 17,  0, -40, false},
    {0x7C, 0x3E, 1, 17,  1,   8, false},
    {0x7E, 0x3E, 1, 17,  1,  -8, false},
    {0x78, 0x3C, 1, 17,  1,   9, false},
    {0x7A, 0x3C, 1, 17,  1,  -9, false},
    {0x74, 0x3A, 1, 17,  1,  10, false},
    {0x76, 0x3A, 1, 17,  1, -10, false},
    {0x70, 0x38, 1, 17,  1,  11, false},
    {0x72, 0x38, 1, 17,  1, -11, false},
    {0x6C, 0x36, 1, 17,  1,  12, false},
    {0x6E, 0x36, 1, 17,  1, -12, false},
    {0x68, 0x34, 1, 17,  1,  13, false},
    {0x6A, 0x34, 1, 17,  1, -13, false},
    {0x64, 0x32, 1, 17,  1,  14, false},
    {0x66, 0x32, 1, 17,  1, -14, false},
    {0x26, 0x26, 0, 17,  1,  15, false},
    {0x27, 0x26, 0, 17,  1, -15, false},
    {0x24, 0x24, 0, 17,  1,  16, false},
    {0x25, 0x24, 0, 17,  1, -16, false},
    {0x22, 0x22, 0, 17,  1,  17, false},
    {0x23, 0x22, 0, 17,  1, -17, false},
    {0x20, 0x20, 0, 17,  1,  18, false},
    {0x21, 0x20, 0, 17,  1, -18, false},
    {0x28, 0x28, 0, 17,  6,   3, false},
    {0x29, 0x28, 0, 17,  6,  -3, false},
    {0x34, 0x34, 0, 17, 11,   2, false},
    {0x35, 0x34, 0, 17, 11,  -2, false},
    {0x32, 0x32, 0, 17, 12,   2, false},
    {0x33, 0x32, 0, 17, 12,  -2, false},
    {0x30, 0x30, 0, 17, 13,   2, false},
    {0x31, 0x30, 0, 17, 13,  -2, false},
    {0x2E, 0x2E, 0, 17, 14,   2, false},
    {0x2F, 0x2E, 0, 17, 14,  -2, false},
    {0x2C, 0x2C, 0, 17, 15,   2, false},
    {0x2D, 0x2C, 0, 17, 15,  -2, false},
    {0x2A, 0x2A, 0, 17, 16,   2, false},
    {0x2B, 0x2A, 0, 17, 16,  -2, false},
    {0x3E, 0x3E, 0, 17, 27,   1, false},
    {0x3F, 0x3E, 0, 17, 27,  -1, false},
    {0x3C, 0x3C, 0, 17, 28,   1, false},
    {0x3D, 0x3C, 0, 17, 28,  -1, false},
    {0x3A, 0x3A, 0, 17, 29,   1, false},
    {0x3B, 0x3A, 0, 17, 29,  -1, false},
    {0x38, 0x38, 0, 17, 30,   1, false},
    {0x39, 0x38, 0, 17, 30,  -1, false},
    {0x36, 0x36, 0, 17, 31,   1, false},
    {0x37, 0x36, 0, 17, 31,  -1, false}
};

struct test_case B15_test_cases[] = {
    {0x10000,   4, 14, 17,  0,  1, false},
    {0x14000,   4, 14, 17,  0, -1, false},
    {0x8000,    4, 13, 17,  1,  1, false},
    {0xA000,    4, 13, 17,  1, -1, false},
    {0x18000, 0xC, 13, 17,  0,  2, false},
    {0x1A000, 0xC, 13, 17,  0, -2, false},
    {0x5000,  0xA, 11, 17,  2,  1, false},
    {0x5800,  0xA, 11, 17,  2, -1, false},
    {0xE000,  0xE, 12, 17,  0,  3, false},
    {0xF000,  0xE, 12, 17,  0, -3, false},
    {0x7000,  0xE, 11, 17,  3,  1, false},
    {0x7800,  0xE, 11, 17,  3, -1, false},
    {0x3000,  0xC, 10, 17,  4,  1, false},
    {0x3400,  0xC, 10, 17,  4, -1, false},
    {0x6000,  0xC, 11, 17,  1,  2, false},
    {0x6800,  0xC, 11, 17,  1, -2, false},
    {0x3800,  0xE, 10, 17,  5,  1, false},
    {0x3C00,  0xE, 10, 17,  5, -1, false},
    {0x1800,  0xC,  9, 17,  6,  1, false},
    {0x1A00,  0xC,  9, 17,  6, -1, false},
    {0x1000,    8,  9, 17,  7,   1, false},
    {0x1200,    8,  9, 17,  7,  -1, false},
    {0x1C000, 0x38, 11, 17,  0,   4, false},
    {0x1C800, 0x38, 11, 17,  0,  -4, false},
    {0x1C00,  0xE,  9, 17,  2,   2, false},
    {0x1E00,  0xE,  9, 17,  2,  -2, false},
    {0x1400,  0xA,  9, 17,  8,   1, false},
    {0x1600,  0xA,  9, 17,  8,  -1, false},
    {0x1E000, 0xF0,  9, 17,  9,   1, false},
    {0x1E200, 0xF0,  9, 17,  9,  -1, false},
    {0x1D000, 0x3A, 11, 17,  0,   5, false},
    {0x1D800, 0x3A, 11, 17,  0,  -5, false},
    {0x2800,  0xA, 10, 17,  0,   6, false},
    {0x2C00,  0xA, 10, 17,  0,  -6, false},
    {0x1E400, 0xF2,  9, 17,  1,   3, false},
    {0x1E600, 0xF2,  9, 17,  1,  -3, false},
    {0x4C00, 0x4C,  8, 17,  3,   2, false},
    {0x4D00, 0x4C,  8, 17,  3,  -2, false},
    {0x1E800, 0xF4,  9, 17, 10,   1, false},
    {0x1EA00, 0xF4,  9, 17, 10,  -1, false},
    {0x4200, 0x42,  8, 17, 11,   1, false},
    {0x4300, 0x42,  8, 17, 11,  -1, false},
    {0x4A00, 0x4A,  8, 17, 12,   1, false},
    {0x4B00, 0x4A,  8, 17, 12,  -1, false},
    {0x4800, 0x48,  8, 17, 13,   1, false},
    {0x4900, 0x48,  8, 17, 13,  -1, false},
    {0x2000,    8, 10, 17,  0,   7, false},
    {0x2400,    8, 10, 17,  0,  -7, false},
    {0x4E00, 0x4E,  8, 17,  1,   4, false},
    {0x4F00, 0x4E,  8, 17,  1,  -4, false},
    {0x1F800,0x1F8,  8, 17,  2,   3, false},
    {0x1F900,0x1F8,  8, 17,  2,  -3, false},
    {0x1FA00,0x1FA,  8, 17,  4,   2, false},
    {0x1FB00,0x1FA,  8, 17,  4,  -2, false},
    {0x400,    8,  7, 17,  5,   2, false},
    {0x480,    8,  7, 17,  5,  -2, false},
    {0x500,  0xA,  7, 17, 14,   1, false},
    {0x580,  0xA,  7, 17, 14,  -1, false},
    {0x700,  0xE,  7, 17, 15,   1, false},
    {0x780,  0xE,  7, 17, 15,  -1, false},
    {0x680, 0x1A,  6, 17, 16,   1, false},
    {0x6C0, 0x1A,  6, 17, 16,  -1, false},
    {0x1EC00, 0xF6,  9, 17,  0,   8, false},
    {0x1EE00, 0xF6,  9, 17,  0,  -8, false},
    {0x1F000, 0xF8,  9, 17,  0,   9, false},
    {0x1F200, 0xF8,  9, 17,  0,  -9, false},
    {0x4600, 0x46,  8, 17,  0,  10, false},
    {0x4700, 0x46,  8, 17,  0, -10, false},
    {0x4400, 0x44,  8, 17,  0,  11, false},
    {0x4500, 0x44,  8, 17,  0, -11, false},
    {0x4000, 0x40,  8, 17,  1,   5, false},
    {0x4100, 0x40,  8, 17,  1,  -5, false},
    {0x600, 0x18,  6, 17,  2,   4, false},
    {0x640, 0x18,  6, 17,  2,  -4, false},
    {0x380, 0x38,  4, 17,  3,   3, false},
    {0x390, 0x38,  4, 17,  3,  -3, false},
    {0x240, 0x24,  4, 17,  4,   3, false},
    {0x250, 0x24,  4, 17,  4,  -3, false},
    {0x3C0, 0x3C,  4, 17,  6,   2, false},
    {0x3D0, 0x3C,  4, 17,  6,  -2, false},
    {0x2A0, 0x2A,  4, 17,  7,   2, false},
    {0x2B0, 0x2A,  4, 17,  7,  -2, false},
    {0x220, 0x22,  4, 17,  8,   2, false},
    {0x230, 0x22,  4, 17,  8,  -2, false},
    {0x3E0, 0x3E,  4, 17, 17,   1, false},
    {0x3F0, 0x3E,  4, 17, 17,  -1, false},
    {0x340, 0x34,  4, 17, 18,   1, false},
    {0x350, 0x34,  4, 17, 18,  -1, false},
    {0x320, 0x32,  4, 17, 19,   1, false},
    {0x330, 0x32,  4, 17, 19,  -1, false},
    {0x2E0, 0x2E,  4, 17, 20,   1, false},
    {0x2F0, 0x2E,  4, 17, 20,  -1, false},
    {0x2C0, 0x2C,  4, 17, 21,   1, false},
    {0x2D0, 0x2C,  4, 17, 21,  -1, false},
    {0x1F400,0x1F4,  8, 17,  0,  12, false},
    {0x1F500,0x1F4,  8, 17,  0, -12, false},
    {0x1F600,0x1F6,  8, 17,  0,  13, false},
    {0x1F700,0x1F6,  8, 17,  0, -13, false},
    {0x1FC00,0x1FC,  8, 17,  0,  14, false},
    {0x1FD00,0x1FC,  8, 17,  0, -14, false},
    {0x1FE00,0x1FE,  8, 17,  0,  15, false},
    {0x1FF00,0x1FE,  8, 17,  0, -15, false},
    {0x160, 0x2C,  3, 17,  1,   6, false},
    {0x168, 0x2C,  3, 17,  1,  -6, false},
    {0x150, 0x2A,  3, 17,  1,   7, false},
    {0x158, 0x2A,  3, 17,  1,  -7, false},
    {0x140, 0x28,  3, 17,  2,   5, false},
    {0x148, 0x28,  3, 17,  2,  -5, false},
    {0x130, 0x26,  3, 17,  3,   4, false},
    {0x138, 0x26,  3, 17,  3,  -4, false},
    {0x120, 0x24,  3, 17,  5,   3, false},
    {0x128, 0x24,  3, 17,  5,  -3, false},
    {0x110, 0x22,  3, 17,  9,   2, false},
    {0x118, 0x22,  3, 17,  9,  -2, false},
    {0x100, 0x20,  3, 17, 10,   2, false},
    {0x108, 0x20,  3, 17, 10,  -2, false},
    {0x1F0, 0x3E,  3, 17, 22,   1, false},
    {0x1F8, 0x3E,  3, 17, 22,  -1, false},
    {0x1E0, 0x3C,  3, 17, 23,   1, false},
    {0x1E8, 0x3C,  3, 17, 23,  -1, false},
    {0x1D0, 0x3A,  3, 17, 24,   1, false},
    {0x1D8, 0x3A,  3, 17, 24,  -1, false},
    {0x1C0, 0x38,  3, 17, 25,   1, false},
    {0x1C8, 0x38,  3, 17, 25,  -1, false},
    {0x1B0, 0x36,  3, 17, 26,   1, false},
    {0x1B8, 0x36,  3, 17, 26,  -1, false},
    {0xF8, 0x3E,  2, 17,  0,  16, false},
    {0xFC, 0x3E,  2, 17,  0, -16, false},
    {0xF0, 0x3C,  2, 17,  0,  17, false},
    {0xF4, 0x3C,  2, 17,  0, -17, false},
    {0xE8, 0x3A,  2, 17,  0,  18, false},
    {0xEC, 0x3A,  2, 17,  0, -18, false},
    {0xE0, 0x38,  2, 17,  0,  19, false},
    {0xE4, 0x38,  2, 17,  0, -19, false},
    {0xD8, 0x36,  2, 17,  0,  20, false},
    {0xDC, 0x36,  2, 17,  0, -20, false},
    {0xD0, 0x34,  2, 17,  0,  21, false},
    {0xD4, 0x34,  2, 17,  0, -21, false},
    {0xC8, 0x32,  2, 17,  0,  22, false},
    {0xCC, 0x32,  2, 17,  0, -22, false},
    {0xC0, 0x30,  2, 17,  0,  23, false},
    {0xC4, 0x30,  2, 17,  0, -23, false},
    {0xB8, 0x2E,  2, 17,  0,  24, false},
    {0xBC, 0x2E,  2, 17,  0, -24, false},
    {0xB0, 0x2C,  2, 17,  0,  25, false},
    {0xB4, 0x2C,  2, 17,  0, -25, false},
    {0xA8, 0x2A,  2, 17,  0,  26, false},
    {0xAC, 0x2A,  2, 17,  0, -26, false},
    {0xA0, 0x28,  2, 17,  0,  27, false},
    {0xA4, 0x28,  2, 17,  0, -27, false},
    {0x98, 0x26,  2, 17,  0,  28, false},
    {0x9C, 0x26,  2, 17,  0, -28, false},
    {0x90, 0x24,  2, 17,  0,  29, false},
    {0x94, 0x24,  2, 17,  0, -29, false},
    {0x88, 0x22,  2, 17,  0,  30, false},
    {0x8C, 0x22,  2, 17,  0, -30, false},
    {0x80, 0x20,  2, 17,  0,  31, false},
    {0x84, 0x20,  2, 17,  0, -31, false},
    {0x60, 0x30,  1, 17,  0,  32, false},
    {0x62, 0x30,  1, 17,  0, -32, false},
    {0x5C, 0x2E,  1, 17,  0,  33, false},
    {0x5E, 0x2E,  1, 17,  0, -33, false},
    {0x58, 0x2C,  1, 17,  0,  34, false},
    {0x5A, 0x2C,  1, 17,  0, -34, false},
    {0x54, 0x2A,  1, 17,  0,  35, false},
    {0x56, 0x2A,  1, 17,  0, -35, false},
    {0x50, 0x28,  1, 17,  0,  36, false},
    {0x52, 0x28,  1, 17,  0, -36, false},
    {0x4C, 0x26,  1, 17,  0,  37, false},
    {0x4E, 0x26,  1, 17,  0, -37, false},
    {0x48, 0x24,  1, 17,  0,  38, false},
    {0x4A, 0x24,  1, 17,  0, -38, false},
    {0x44, 0x22,  1, 17,  0,  39, false},
    {0x46, 0x22,  1, 17,  0, -39, false},
    {0x40, 0x20,  1, 17,  0,  40, false},
    {0x42, 0x20,  1, 17,  0, -40, false},
    {0x7C, 0x3E,  1, 17,  1,   8, false},
    {0x7E, 0x3E,  1, 17,  1,  -8, false},
    {0x78, 0x3C,  1, 17,  1,   9, false},
    {0x7A, 0x3C,  1, 17,  1,  -9, false},
    {0x74, 0x3A,  1, 17,  1,  10, false},
    {0x76, 0x3A,  1, 17,  1, -10, false},
    {0x70, 0x38,  1, 17,  1,  11, false},
    {0x72, 0x38,  1, 17,  1, -11, false},
    {0x6C, 0x36,  1, 17,  1,  12, false},
    {0x6E, 0x36,  1, 17,  1, -12, false},
    {0x68, 0x34,  1, 17,  1,  13, false},
    {0x6A, 0x34,  1, 17,  1, -13, false},
    {0x64, 0x32,  1, 17,  1,  14, false},
    {0x66, 0x32,  1, 17,  1, -14, false},
    {0x26, 0x26,  0, 17,  1,  15, false},
    {0x27, 0x26,  0, 17,  1, -15, false},
    {0x24, 0x24,  0, 17,  1,  16, false},
    {0x25, 0x24,  0, 17,  1, -16, false},
    {0x22, 0x22,  0, 17,  1,  17, false},
    {0x23, 0x22,  0, 17,  1, -17, false},
    {0x20, 0x20,  0, 17,  1,  18, false},
    {0x21, 0x20,  0, 17,  1, -18, false},
    {0x28, 0x28,  0, 17,  6,   3, false},
    {0x29, 0x28,  0, 17,  6,  -3, false},
    {0x34, 0x34,  0, 17, 11,   2, false},
    {0x35, 0x34,  0, 17, 11,  -2, false},
    {0x32, 0x32,  0, 17, 12,   2, false},
    {0x33, 0x32,  0, 17, 12,  -2, false},
    {0x30, 0x30,  0, 17, 13,   2, false},
    {0x31, 0x30,  0, 17, 13,  -2, false},
    {0x2E, 0x2E,  0, 17, 14,   2, false},
    {0x2F, 0x2E,  0, 17, 14,  -2, false},
    {0x2C, 0x2C,  0, 17, 15,   2, false},
    {0x2D, 0x2C,  0, 17, 15,  -2, false},
    {0x2A, 0x2A,  0, 17, 16,   2, false},
    {0x2B, 0x2A,  0, 17, 16,  -2, false},
    {0x3E, 0x3E,  0, 17, 27,   1, false},
    {0x3F, 0x3E,  0, 17, 27,  -1, false},
    {0x3C, 0x3C,  0, 17, 28,   1, false},
    {0x3D, 0x3C,  0, 17, 28,  -1, false},
    {0x3A, 0x3A,  0, 17, 29,   1, false},
    {0x3B, 0x3A,  0, 17, 29,  -1, false},
    {0x38, 0x38,  0, 17, 30,   1, false},
    {0x39, 0x38,  0, 17, 30,  -1, false},
    {0x36, 0x36,  0, 17, 31,   1, false},
    {0x37, 0x36,  0, 17, 31,  -1, false}
};

int main(void)
{
    int32_t  status = 0;
    uint32_t i      = 0;
    uint32_t run    = 0;
    int32_t  sl     = 0;
    bool     eob    = false;
    bool     esc    = false;

    BufBitBuffer bbf;
    StreamState  ss;
    
    BlockParser bp(bbf, ss);
    struct test_case* tc = nullptr;

    for (i = 0; i < sizeof(B14_test_cases) / sizeof(struct test_case); i++) {
	cout << "B14 Test Case " << dec << i+1 << ": ";
	tc = &B14_test_cases[i];
	
	bbf.PokeBits(tc->bits, 17);
	status = bp.RunGetB14Coeff(run, sl, eob, esc, tc->first);
	if (run != tc->er || sl != tc->el) {
	    if (run != tc->er) {
		cout << "Run Failed (got " << run << ", exp " << tc->er << ")" << endl;
	    }
	    if (sl != tc->el) {
		cout << "Level Failed (got " << sl << ", exp " << tc->el << ")" << endl;
	    }
	} else {
	    cout << "Passed" << endl;
	}
    }

    cout << endl;

    for (i = 0; i < sizeof(B15_test_cases) / sizeof(struct test_case); i++) {
	cout << "B15 Test Case " << dec << i+1 << ": ";
	tc = &B15_test_cases[i];
	
	bbf.PokeBits(tc->bits, 17);
	status = bp.RunGetB15Coeff(run, sl, eob, esc);
	if (run != tc->er || sl != tc->el) {
	    if (run != tc->er) {
		cout << "Run Failed (got " << run << ", exp " << tc->er << ")" << endl;
	    }
	    if (sl != tc->el) {
		cout << "Level Failed (got " << sl << ", exp " << tc->el << ")" << endl;
	    }
	} else {
	    cout << "Passed" << endl;
	}
    }
    
    return 0;
}
